----------------------------
Date and Time - Exercises :
----------------------------
 
1. Write a query to display the first day of the month (in datetime format) three months before the current month.
 
    ANS :SELECT date(((PERIOD_ADD(EXTRACT(YEAR_MONTH FROM CURDATE()),-3)*100)+1));
 
2. Write a query to display the last day of the month (in datetime format) three months before the current month.
 
    ANS :SELECT (SUBDATE(ADDDATE
     (CURDATE(),INTERVAL 1 MONTH),
         INTERVAL DAYOFMONTH(CURDATE())DAY)) 
            AS LastDayOfTheMonth;
 
3. Write a query to get the distinct Mondays from hire_date in employees tables.
 
    ANS :SELECT DISTINCT(STR_TO_DATE
     (CONCAT(YEARWEEK(hire_date),'1'),'%x%v%w')) 
          FROM employees;
 
4. Write a query to get the first day of the current year.
    ANS :SELECT MAKEDATE(EXTRACT(YEAR FROM CURDATE()),1);
 
5. Write a query to get the last day of the current year.
 
    ANS :SELECT STR_TO_DATE(CONCAT(12,31,
      EXTRACT(YEAR FROM CURDATE())), '%m%d%Y');
 
6. Write a query to calculate the age in year.
 
    ANS :SELECT YEAR(CURRENT_TIMESTAMP) - 
         YEAR("1967-06-08") - 
             (RIGHT(CURRENT_TIMESTAMP, 5) < 
                  RIGHT("1967-06-08", 5)) as age;
 
7. Write a query to get the current date in the following format.
    Sample date : 2014-09-04
    Output : September 4, 2014
 
    ANS :SELECT DATE_FORMAT(CURDATE(),'%M %e, %Y')  AS 'Current_date';
 
 
8. Write a query to get the current date in Thursday September 2014 format. 
    Thursday September 2014
 
    ANS :SELECT DATE_FORMAT(NOW(), '%W %M %Y');
 
9. Write a query to extract the year from the current date.
 
    ANS :SELECT EXTRACT(YEAR FROM  NOW());
 
10. Write a query to get the DATE value from a given day (number in N).
    Sample days: 730677
    Output : 2000-07-11
 
    ANS :SELECT FROM_DAYS(730677);
 
11. Write a query to get the first name and hire date from employees table where hire date between '1987-06-01' and '1987-07-30'
    ANS :SELECT FIRST_NAME, HIRE_DATE 
    FROM employees 
       WHERE HIRE_DATE  
         BETWEEN '1987-06-01 00:00:00' 
            AND '1987-07-30  23:59:59';
 
12. Write a query to display the current date in the following format.
    Sample output: Thursday 4th September 2014 00:00:00
 
    ANS :SELECT date_format(CURDATE(),'%W %D %M %Y %T');
 
13. Write a query to display the current date in the following format.
    Sample output: 05/09/2014
 
    ANS :SELECT date_format(CURDATE(),'%d/%m/%Y');
 
 
14. Write a query to display the current date in the following format.
    Sample output: 12:00 AM Sep 5, 2014
 
    ANS :SELECT date_format(CURDATE(),'%l:%i %p %b %e, %Y');
 
15. Write a query to get the firstname, lastname who joined in the month of June.
 
    ANS :SELECT first_name, last_name 
    FROM employees WHERE MONTH(HIRE_DATE) =  6;
 
16. Write a query to get the years in which more than 10 employees joined.
 
    ANS :SELECT DATE_FORMAT(HIRE_DATE,'%Y') 
     FROM employees  
       GROUP BY DATE_FORMAT(HIRE_DATE,'%Y') 
          HAVING COUNT(EMPLOYEE_ID) > 10;
 
17. Write a query to get first name of employees who joined in 1987.
 
    ANS :SELECT FIRST_NAME, HIRE_DATE
FROM employees
WHERE YEAR(HIRE_DATE)=1987;
 
18. Write a query to get department name, manager name, and salary of the manager for all managers whose experience is more than 5 years.
 
    ANS :SELECT DEPARTMENT_NAME, FIRST_NAME, SALARY  
    FROM departments D 
       JOIN employees E 
         ON (D.MANAGER_ID=E.MANAGER_ID)  
           WHERE  (SYSDATE()-HIRE_DATE) / 365 > 5;

 
19. Write a query to get employee ID, last name, and date of first salary of the employees.
 
 
    ANS :SELECT employee_id, last_name, hire_date,  LAST_DAY(hire_date)
  FROM employees;
 
20. Write a query to get first name, hire date and experience of the employees.
 
    ANS :SELECT FIRST_NAME, SYSDATE(), HIRE_DATE, DATEDIFF( SYSDATE(), hire_date )/365
  FROM employees;
 
21. Write a query to get the department ID, year, and number of employees joined.
 
    ANS :SELECT DEPARTMENT_ID, DATE_FORMAT(HIRE_DATE,'%Y'), 
   COUNT(EMPLOYEE_ID)  
      FROM employees 
        GROUP BY DEPARTMENT_ID, DATE_FORMAT(HIRE_DATE, '%Y') 
           ORDER BY DEPARTMENT_ID;
		   
		  

[11:47] Bibhuranjan Mohanty
MySQL Aggregate Functions and Group by- Exercises

--------------------------------------------------
 
Get me Total Salary Expenxses ,Minimum salary,Maximum Salary  of those department  which is having more than 10 employees;

SELECT DEPARTMENT_ID,COUNT(DISTINCT JOB_ID) AS 'CNT' FROM EMPLOYEES GROUP BY DEPARTMENT_ID  ORDER BY MAX(DISTINCT JOB_ID) DESC LIMIT  1;
 
1. Write a query to list the number of jobs available in the employees table.

   ANS : SELECT COUNT(DISTINCT job_id)  FROM employees;
 
2. Write a query to get the total salaries payable to employees.
 
   ANS: SELECT COUNT(DISTINCT job_id)  FROM employees;
 
3. Write a query to get the minimum salary from employees table.

   ANS : SELECT SUM(salary)  FROM employees;
 
4. Write a query to get the maximum salary of an employee working as a Programmer.
 
   ANS : SELECT MIN(salary) FROM employees;
 
5. Write a query to get the average salary and number of employees working the department 90.
 
   ANS : SELECT AVG(salary),count(*)  FROM employees  WHERE department_id = 90;
 
6. Write a query to get the highest, lowest, sum, and average salary of all employees.
 
   ANS : SELECT ROUND(MAX(salary),0) 'Maximum',

                ROUND(MIN(salary),0) 'Minimum',

                ROUND(SUM(salary),0) 'Sum',

                ROUND(AVG(salary),0) 'Average'

                FROM employees;
 
7. Write a query to get the number of employees with the same job.
 
   ANS : SELECT job_id, COUNT(*)

         FROM employees

         GROUP BY job_id;
 
8. Write a query to get the difference between the highest and lowest salaries.
 
   ANS : SELECT MAX(salary) - MIN(salary) DIFFERENCE FROM employees;
 
9. Write a query to find the manager ID and the salary of the lowest-paid employee for that manager.
 
   ANS : SELECT manager_id, MIN(salary)

		FROM employees

		WHERE manager_id IS NOT NULL

		GROUP BY manager_id

		ORDER BY MIN(salary) DESC;
 
10. Write a query to get the department ID and the total salary payable in each department.
 
   ANS : SELECT department_id, SUM(salary)

	 FROM employees 

	 GROUP BY department_id;
 
11. Write a query to get the average salary for each job ID excluding programmer.
 
   ANS : SELECT job_id, AVG(salary) 

		FROM employees 

		WHERE job_id <> 'IT_PROG' 

		GROUP BY job_id;      
 
12. Write a query to get the total salary, maximum, minimum, average salary of employees (job ID wise), for department ID 90 only.

   ANS :        SELECT job_id, SUM(salary), AVG(salary), MAX(salary), MIN(salary)

		FROM employees 

		WHERE department_id = '90' 

		GROUP BY job_id;
 
13. Write a query to get the job ID and maximum salary of the employees where maximum salary is greater than or equal to $4000.
 
   ANS :    SELECT job_id, MAX(salary) 

            FROM employees 

            GROUP BY job_id 

            HAVING MAX(salary) >=4000;
 
14. Write a query to get the average salary for all departments employing more than 10 employees.
 
   ANS :   SELECT department_id, AVG(salary), COUNT(*) 

	   FROM employees 

	   GROUP BY department_id

	   HAVING COUNT(*) > 10;





Class- Questions
---------------	
Find dept_id where max number of jobs are there.	  
